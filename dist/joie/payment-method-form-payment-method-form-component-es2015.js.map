{"version":3,"sources":["./node_modules/@stripe/stripe-js/dist/stripe.esm.js","./src/app/shared/components/payment-method-form/payment-method-form.component.ts","./src/app/shared/components/payment-method-form/payment-method-form.component.html","./src/app/shared/components/payment-method-form/stripe-elements.style.ts"],"names":[],"mappings":"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","file":"payment-method-form-payment-method-form-component-es2015.c73a21691c3a4849583f.js","sourcesContent":["function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar V3_URL = 'https://js.stripe.com/v3';\n\nvar injectScript = function injectScript() {\n  var script = document.createElement('script');\n  script.src = V3_URL;\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"1.3.2\"\n  });\n};\n\nvar stripePromise = null;\nvar loadScript = function loadScript() {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise !== null) {\n    return stripePromise;\n  }\n\n  stripePromise = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    var script = document.querySelector(\"script[src=\\\"\".concat(V3_URL, \"\\\"], script[src=\\\"\").concat(V3_URL, \"/\\\"]\")) || injectScript();\n    script.addEventListener('load', function () {\n      if (window.Stripe) {\n        resolve(window.Stripe);\n      } else {\n        reject(new Error('Stripe.js not available'));\n      }\n    });\n    script.addEventListener('error', function () {\n      reject(new Error('Failed to load Stripe.js'));\n    });\n  });\n  return stripePromise;\n};\nvar initStripe = function initStripe(maybeStripe, args) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(void 0, _toConsumableArray(args));\n  registerWrapper(stripe);\n  return stripe;\n};\n\n// own script injection.\n\nvar stripePromise$1 = Promise.resolve().then(loadScript);\nvar loadCalled = false;\nstripePromise$1[\"catch\"](function (err) {\n  if (!loadCalled) {\n    console.warn(err);\n  }\n});\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  return stripePromise$1.then(function (maybeStripe) {\n    return initStripe(maybeStripe, args);\n  });\n};\n\nexport { loadStripe };\n","import {\n  Component,\n  ViewChild,\n  ElementRef,\n  NgModule,\n  AfterViewInit,\n} from '@angular/core';\nimport { AngularFireFunctions } from '@angular/fire/functions';\nimport { loadStripe, Stripe, StripeCardElement } from '@stripe/stripe-js';\nimport { style } from './stripe-elements.style';\nimport { CommonModule } from '@angular/common';\n\nconst STRIPE_KEY = 'pk_test_2iuUrsVhJB1IVAhu1KnRYSFA00elnKh57f';\n// declare var Stripe: stripe.StripeStatic;\n\n@Component({\n  templateUrl: './payment-method-form.component.html',\n  styleUrls: ['./payment-method-form.component.scss'],\n})\nexport class PaymentMethodFormComponent implements AfterViewInit {\n  @ViewChild('cardElement', { read: ElementRef })\n  private cardElement: ElementRef;\n  private stripe: Stripe;\n  private card: StripeCardElement;\n  cardErrors: string;\n  isLoading = true;\n\n  constructor(private fns: AngularFireFunctions) {}\n\n  async ngAfterViewInit(): Promise<void> {\n    this.card = await this.mountCard();\n    // Handle real-time validation errors from the card Element.\n    this.cardValidate();\n    await this.cardAvailable();\n    this.isLoading = false;\n    this.card.focus();\n  }\n\n  private cardAvailable() {\n    const promise = new Promise((resolve) => {\n      this.card.on('ready', async () => {\n        return resolve();\n      });\n    });\n    return promise;\n  }\n\n  private cardValidate() {\n    this.card.on('change', ({ error }) => {\n      this.cardErrors = error?.message;\n    });\n  }\n\n  async mountCard() {\n    this.stripe = await loadStripe(STRIPE_KEY);\n    const elements = this.stripe.elements();\n    const card = elements.create('card', { style });\n    card.mount(this.cardElement.nativeElement);\n    return card;\n  }\n\n  async onSubmit(e) {\n    e.preventDefault();\n\n    const { source, error } = await this.stripe.createSource(this.card, null);\n\n    if (error) {\n      // Inform the customer that there was an error.\n      this.cardErrors = error.message;\n    } else {\n      this.isLoading = true;\n      // Send the token to your server.\n      const callable = this.fns.httpsCallable('stripeAttachSource');\n      const res = await callable({ sourceId: source.id }).toPromise();\n      console.log(res);\n      this.isLoading = false;\n    }\n  }\n}\n\n@NgModule({\n  declarations: [PaymentMethodFormComponent],\n  imports: [CommonModule],\n})\nexport class PaymentSourceFormModule {}\n\n// // Submit the form with the token ID.\n// function stripeTokenHandler(token) {\n//   // Insert the token ID into the form so it gets submitted to the server\n//   var form = document.getElementById('payment-form');\n//   var hiddenInput = document.createElement('input');\n//   hiddenInput.setAttribute('type', 'hidden');\n//   hiddenInput.setAttribute('name', 'stripeToken');\n//   hiddenInput.setAttribute('value', token.id);\n//   form.appendChild(hiddenInput);\n\n//   // Submit the form\n//   form.submit();\n// }\n","<div *ngIf=\"isLoading\">LOADING...</div>\n<form class=\"form-grid\" (submit)=\"onSubmit($event)\" [class.loading]=\"isLoading\">\n  <fieldset #cardElement class=\"stripe-card\">\n    <!-- A Stripe Element will be inserted here. -->\n  </fieldset>\n\n  <!-- Used to display Element errors. -->\n\n  <button type=\"submit\">Submit Payment</button>\n</form>\n<p>{{ cardErrors }}</p>\n","export const style = {\n  base: {\n    color: '#32325d',\n    fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n    fontSmoothing: 'antialiased',\n    fontSize: '16px',\n    '::placeholder': {\n      color: '#aab7c4',\n    },\n  },\n  invalid: {\n    color: '#fa755a',\n    iconColor: '#fa755a',\n  },\n};\n"],"sourceRoot":"webpack:///"}