@use 'sass:map';

$headings: 'h1, h2, h3, h4, h5, h6';

$layout-breakpoint-xxs: 400px;
$layout-breakpoint-xs: 700px;
$layout-breakpoint-sm: 960px;
$layout-breakpoint-lg: 1365px;

:root {
  --layout-breakpoint-xxs: #{$layout-breakpoint-xxs};
  --layout-breakpoint-xs: #{$layout-breakpoint-xs};
  --layout-breakpoint-sm: #{$layout-breakpoint-sm};
  --layout-breakpoint-lg: #{$layout-breakpoint-lg};
}

body {
  padding: env(safe-area-inset-top, 20px) env(safe-area-inset-right, 20px)
    env(safe-area-inset-bottom, 20px) env(safe-area-inset-left, 20px);
}

#{$headings} {
  &:last-child {
    margin-bottom: 0;
  }
}

[class^='container'i] {
  $container-inline-size-variable-name: --container-inline-size;
  $max-inline-size-variable-name: --max-inline-size;

  #{$container-inline-size-variable-name}: 100%;
  #{$max-inline-size-variable-name}: calc(
    var(#{$container-inline-size-variable-name}) - var(--joie-gutter) * 2
  );

  width: 100%;
  inline-size: 100%;
  max-width: var(#{$max-inline-size-variable-name});
  max-inline-size: var(#{$max-inline-size-variable-name});
  margin: 0 auto;

  @media (min-width: $layout-breakpoint-lg) {
    &:not(.container-fluid) {
      #{$container-inline-size-variable-name}: calc(#{$layout-breakpoint-lg});
    }
  }
  @media (min-width: $layout-breakpoint-sm) {
    &.container-condense {
      #{$container-inline-size-variable-name}: #{$layout-breakpoint-sm};
    }
  }
  @media (min-width: $layout-breakpoint-xs) {
    &.container-ultra-condense {
      #{$container-inline-size-variable-name}: #{$layout-breakpoint-xs};
    }
  }
}

[class*='layout-columns'i] {
  $column-items-min-inline-size-variable-name: --column-items-min-inline-size;
  $items-min-inline-sizes: (
    'sm': 150px,
    'md': 250px,
    'lg': 350px,
  );
  @each $key, $value in $items-min-inline-sizes {
    @at-root [class~='layout-columns-#{$key}'i] {
      #{$column-items-min-inline-size-variable-name}: #{map.get($items-min-inline-sizes, #{$key})};
    }
  }
  width: 100%;
  inline-size: 100%;
  display: grid;
  grid-template-columns: repeat(
    auto-fit,
    minmax(
      var(#{$column-items-min-inline-size-variable-name}, #{map.get($items-min-inline-sizes, lg)}),
      1fr
    )
  );
  grid-column-gap: var(--joie-gutter);
  grid-auto-rows: 1fr;
}

[class*='layout-rows'] {
  $row-spacing-size-variable-name: --row-spacing-size;
  $spacing-sizes: (
    'xs': var(--joie-gutter),
    'sm': calc(var(--joie-gutter) * 2),
    'md': calc(var(--joie-gutter) * 3),
    'lg': calc(var(--joie-gutter) * 4),
  );
  @each $key, $value in $spacing-sizes {
    @at-root [class~='layout-rows-#{$key}'i] {
      #{$row-spacing-size-variable-name}: #{map.get($spacing-sizes, #{$key})};
    }
  }
  display: grid;
  grid-row-gap: var(#{$row-spacing-size-variable-name}, #{map.get($spacing-sizes, md)});
  > {
    #{$headings} {
      margin: 0;
    }
  }
}

.layout-center {
  place-content: center;
  place-items: center;
}

// $space-row-variable-name: --gutter-row;
// $space-column-variable-name: --gutter-column;
// $size: (
//   'sm': 10px,
//   'md': 20px,
//   'lg': 30px,
// );
// .layout {
//   &-spacing-block {
//     &-sm {
//       #{$space-row-variable-name}: #{map.get($size, sm)};
//     }
//     &-md {
//       #{$space-row-variable-name}: #{map.get($size, md)};
//     }
//     &-lg {
//       #{$space-row-variable-name}: #{map.get($size, lg)};
//     }
//   }
//   &-spacing-inline {
//     &-sm {
//       #{$space-column-variable-name}: #{map.get($size, sm)};
//     }
//     &-md {
//       #{$space-column-variable-name}: #{map.get($size, md)};
//     }
//     &-lg {
//       #{$space-column-variable-name}: #{map.get($size, lg)};
//     }
//   }

//   &-flex {
//     display: flex;
//     place-items: center;
//     > * + * {
//       margin-left: var(#{$space-column-variable-name});
//       margin-inline-start: var(#{$space-column-variable-name});
//       margin-bottom: var(#{$space-row-variable-name});
//       margin-block-end: var(#{$space-row-variable-name});
//     }
//   }

//   &-grid {
//     display: grid;
//     grid-gap: var(#{$space-row-variable-name}, 0) var(#{$space-column-variable-name}, 0);
//     &#{&}-inline-features {
//       width: 100%;
//       // place-items: center;
//       // display: grid;
//       grid-template-columns: repeat(auto-fit, minmax(150px, auto));
//       // grid-gap: 20px;
//       // display: flex;
//       // flex-wrap: wrap;
//       // justify-content: center;
//       // > * {
//       //   flex: 0 1 auto;
//       //   margin: 5px;
//       // }
//     }
//   }
// }

main {
  > section {
    $offset-block-start-variable-name: --section-gutter-block-start;
    $offset-block-end-variable-name: --section-gutter-block-end;
    $gutter-block: calc(var(--joie-gutter) * 3);
    content-visibility: auto;
    contain-intrinsic-size: 500px;

    #{$offset-block-start-variable-name}: #{$gutter-block};
    #{$offset-block-end-variable-name}: #{$gutter-block};
    padding: var(#{$offset-block-start-variable-name}) 0 var(#{$offset-block-end-variable-name});
    &.section-offset-block-start {
      // $offset-size-variable-name: --offset-size;
      // $offset-sizes: (
      //   'sm': -1,
      //   'md': -2,
      //   'lg': -3,
      // );
      // @each $key, $value in $offset-sizes {
      //   @at-root [class~='section-offset-block-start-#{$key}'i] {
      //     #{$offset-size-variable-name}: #{map.get($offset-sizes, #{$key})};
      //   }
      // }
      // margin-top: calc(
      //   var(#{$offset-size-variable-name}, #{map.get($offset-sizes, 'sm')}) *
      //     var(--section-gutter-block-end)
      // );
      padding-top: 0;
      margin-top: calc(-1 * var(#{$offset-block-end-variable-name}));
    }
  }
}

footer {
  background-color: var(--joie-color-primary);
  color: var(--joie-color-background);
  content-visibility: auto;
  @extend main;
}

.dialog-as-drawer {
  align-self: stretch;
  .mat-dialog-content {
    flex-grow: 1;
    max-height: initial;
  }
}
