@use 'sass:map';

$layout-breakpoint-xs: 700px;
$layout-breakpoint-sm: 960px;
$layout-breakpoint-lg: 1365px;

body {
  padding: env(safe-area-inset-top, 20px) env(safe-area-inset-right, 20px)
    env(safe-area-inset-bottom, 20px) env(safe-area-inset-left, 20px);
}

.container {
  // --max-inline-size: #{$max-inline-size};
  --container-inline-size: 100%;
  --max-inline-size: calc(var(--container-inline-size) - var(--joie-gutter) * 2);

  width: 100%;
  inline-size: 100%;
  max-width: var(--max-inline-size);
  max-inline-size: var(--max-inline-size);
  margin: 0 auto;

  @media (min-width: $layout-breakpoint-lg) {
    &:not(&-fluid) {
      --container-inline-size: calc(#{$layout-breakpoint-lg});
    }
    &#{&}-condense {
      --container-inline-size: #{$layout-breakpoint-sm};
    }
    &#{&}-ultra-condense {
      --container-inline-size: #{$layout-breakpoint-xs};
    }
  }
}

$space-row-variable-name: --gutter-row;
$space-column-variable-name: --gutter-column;
$size: (
  'sm': 10px,
  'md': 20px,
  'lg': 30px,
);
.layout {
  &-spacing-block {
    &-sm {
      #{$space-row-variable-name}: #{map.get($size, sm)};
    }
    &-md {
      #{$space-row-variable-name}: #{map.get($size, md)};
    }
    &-lg {
      #{$space-row-variable-name}: #{map.get($size, lg)};
    }
  }
  &-spacing-inline {
    &-sm {
      #{$space-column-variable-name}: #{map.get($size, sm)};
    }
    &-md {
      #{$space-column-variable-name}: #{map.get($size, md)};
    }
    &-lg {
      #{$space-column-variable-name}: #{map.get($size, lg)};
    }
  }

  &-flex {
    display: flex;
    place-items: center;
    > * + * {
      margin-left: var(#{$space-column-variable-name});
      margin-inline-start: var(#{$space-column-variable-name});
      margin-bottom: var(#{$space-row-variable-name});
      margin-block-end: var(#{$space-row-variable-name});
    }
  }

  &-grid {
    display: grid;
    grid-gap: var(#{$space-row-variable-name}, 0) var(#{$space-column-variable-name}, 0);
    &#{&}-inline-features {
      width: 100%;
      // place-items: center;
      // display: grid;
      grid-template-columns: repeat(auto-fit, minmax(150px, auto));
      // grid-gap: 20px;
      // display: flex;
      // flex-wrap: wrap;
      // justify-content: center;
      // > * {
      //   flex: 0 1 auto;
      //   margin: 5px;
      // }
    }
  }
}

main {
  > section {
    content-visibility: auto;
    contain-intrinsic-size: 500px;
    --block-gutter: 60px;
    padding: var(--block-gutter) 0;
    &.section-block-start-offset {
      padding-top: 0;
      margin-top: calc(-1 * var(--block-gutter));
    }

    .section-context {
      place-items: center;
      display: grid;
      grid-row-gap: 35px;
    }
  }
}

.dialog-as-drawer {
  align-self: stretch;
  .mat-dialog-content {
    flex-grow: 1;
    max-height: initial;
  }
}
