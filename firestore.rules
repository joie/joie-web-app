rules_version = "2";

service cloud.firestore {
  match /databases/{database}/documents {

    // secure by default
    match /{document=**} {
      allow read, write: if false;
    }

    // Variables
    // //////////////////

    // Reusable functions
    // //////////////////

    function isSignedIn() {
      return request.auth != null;
    }

    // determine document ownership
    function isOwner(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }

    // determine claim
    function isClaim(claim) {
      return request.auth.token[claim] == true;
    }

    // function getUserData(){
    // 	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    // }

    // Role based rule
  	// function hasRoles(roles) {
  	// // e.g. hasRoles(['subscriber', admin'])
  	// 	return getUserData().roles.hasAny(roles) == true;
  	// }

  	// function getRole(role) {
  	// e.g. getRole('admin')
  	// 	return role in getUserData().roles;
  	// }

    // //////////////////

// 		match /users/{user_id} {
// 			allow read, write: if false;

//       match /carts/{document=**} {
// 				allow read, write: if isOwner(user_id);
// 					// match /items/{document=**} {
// 					// allow read, write: if isOwner(user_id);
// 					// }
//       }
//     }

		match /users/{uid} {
      allow read: if request.auth.uid == uid;
     	// stripe extension
      match /checkout_sessions/{id} {
        allow read, write: if request.auth.uid == uid;
      }
      match /subscriptions/{id} {
        allow read, write: if request.auth.uid == uid;
      }
    }

		// match /stripe_customers/{uid} {
    //   allow read: if request.auth.uid == uid;
    // }

		// match /posts/{post} {
    //   allow read: if true;
    //   allow create: if isSignedIn() && isClaim('author');
    //   allow update, delete: if isSignedIn() && isClaim('author') && isOwner(request.resource.data.uid);
    // }

		match /sessions/{session} {
      allow read: if true;
      allow create: if isSignedIn() && isClaim('teacher');
      allow update, delete: if isSignedIn() && isClaim('teacher') && isOwner(request.resource.data.uid);
    }


    // match /sellers/{document=**} {
    //   allow read: if true;

      // // Explicitly define rules for the 'products' subcollection
      // match /products/{document=**} {
      // 	allow read: if true;
      // }
    // }

		// match /products/{document=**} {
		// allow read: if true;
		// allow write: if false; // should be only admin
		// allow create: if getRole('admin') == true; // THIS IS TEMPORARY $%@$#&&&
		// }

		// match /orders/{document=**} {
		// 	allow read: if isOwner(get(resource.data.userRef).id); // should be admin or uid match
		// allow write: if isOwner(get(request.resource.data.userRef).id); // should be admin or uid match
		// }

  }
}
